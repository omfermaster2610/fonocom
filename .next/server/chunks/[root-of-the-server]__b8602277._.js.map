{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omars/OneDrive/Escritorio/fonocom/src/app/api/progreso/route.ts"],"sourcesContent":["import { type NextRequest, NextResponse } from \"next/server\"\r\nimport fs from \"fs\"\r\nimport path from \"path\"\r\n\r\ninterface User {\r\n  username: string\r\n  progreso?: {\r\n    [modulo: string]: number\r\n  }\r\n}\r\n\r\nconst DATA_FILE_PATH = path.join(process.cwd(), \"data\", \"data.json\")\r\n\r\n// Función para leer el archivo JSON\r\nfunction readDataFile(): User[] {\r\n  try {\r\n    if (!fs.existsSync(DATA_FILE_PATH)) {\r\n      const dir = path.dirname(DATA_FILE_PATH)\r\n      if (!fs.existsSync(dir)) {\r\n        fs.mkdirSync(dir, { recursive: true })\r\n      }\r\n      fs.writeFileSync(DATA_FILE_PATH, JSON.stringify([]))\r\n      return []\r\n    }\r\n\r\n    const fileContent = fs.readFileSync(DATA_FILE_PATH, \"utf-8\")\r\n    return JSON.parse(fileContent)\r\n  } catch (error) {\r\n    console.error(\"Error reading data file:\", error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Función para escribir el archivo JSON\r\nfunction writeDataFile(data: User[]): boolean {\r\n  try {\r\n    fs.writeFileSync(DATA_FILE_PATH, JSON.stringify(data, null, 2))\r\n    return true\r\n  } catch (error) {\r\n    console.error(\"Error writing data file:\", error)\r\n    return false\r\n  }\r\n}\r\n\r\n// GET - Obtener progreso de un usuario\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url)\r\n    const username = searchParams.get(\"username\")\r\n\r\n    if (!username) {\r\n      return NextResponse.json({ error: \"Username is required\" }, { status: 400 })\r\n    }\r\n\r\n    const data = readDataFile()\r\n    const user = data.find((u) => u.username === username)\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: \"User not found\" }, { status: 404 })\r\n    }\r\n\r\n    return NextResponse.json({\r\n      username: user.username,\r\n      progreso: user.progreso || {},\r\n    })\r\n  } catch (error) {\r\n    console.error(\"Error in GET:\", error)\r\n    return NextResponse.json({ error: \"Internal server error\" }, { status: 500 })\r\n  }\r\n}\r\n\r\n// POST - Actualizar progreso de un usuario\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json()\r\n    const { username, modulo, incremento } = body\r\n\r\n    if (!username || !modulo || incremento === undefined) {\r\n      return NextResponse.json(\r\n        { error: \"Username, modulo, and incremento are required\" },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    const data = readDataFile()\r\n    const userIndex = data.findIndex((u) => u.username === username)\r\n\r\n    if (userIndex === -1) {\r\n      return NextResponse.json({ error: \"User not found\" }, { status: 404 })\r\n    }\r\n\r\n    if (!data[userIndex].progreso) {\r\n      data[userIndex].progreso = {}\r\n    }\r\n\r\n    const progresoActual = data[userIndex].progreso[modulo] || 0\r\n    const nuevoProgreso = Math.min(progresoActual + incremento, 100)\r\n\r\n    data[userIndex].progreso[modulo] = nuevoProgreso\r\n\r\n    const success = writeDataFile(data)\r\n\r\n    if (!success) {\r\n      return NextResponse.json({ error: \"Failed to save data\" }, { status: 500 })\r\n    }\r\n\r\n    return NextResponse.json({\r\n      username,\r\n      modulo,\r\n      progresoAnterior: progresoActual,\r\n      progresoNuevo: nuevoProgreso,\r\n      completado: nuevoProgreso >= 1,\r\n    })\r\n  } catch (error) {\r\n    console.error(\"Error in POST:\", error)\r\n    return NextResponse.json({ error: \"Internal server error\" }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}